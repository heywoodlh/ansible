---
- name: create heywoodlh
  ansible.builtin.user:
    name: heywoodlh
    shell: /bin/pwsh
- name: passwordless sudo for heywoodlh
  ansible.builtin.lineinfile:
    path: /etc/sudoers.d/heywoodlh
    state: present
    create: yes
    regexp: "^heywoodlh"
    line: "heywoodlh ALL=(ALL) NOPASSWD: ALL"
    validate: 'visudo -cf %s'
- name: remove sudo configuration from archinstall script if exists
  ansible.builtin.lineinfile:
    path: /etc/sudoers
    state: absent
    regexp: "^heywoodlh"
    line: "heywoodlh ALL=(ALL) ALL"
    validate: 'visudo -cf %s'
- name: create heywoodlh .ssh directory
  ansible.builtin.file:
    path: /home/heywoodlh/.ssh
    mode: '0700'
    owner: heywoodlh
    state: directory
- name: grab authorized_keys file
  ansible.builtin.copy:
    src: authorized_keys
    dest: /home/heywoodlh/.ssh/authorized_keys
    mode: '0600'
    owner: heywoodlh
- name: add heywoodlh to docker group
  ansible.builtin.user:
    name: heywoodlh
    group: docker
    append: yes
- name: install user packages
  ansible.builtin.apt:
    name: "{{ item }}"
    update_cache: yes
  with_items:
  - "vim"
  - "w3m"
  - "git"
  - "curl"
  - "python3-pip"
  - "mosh"
  when: ansible_os_family == 'Debian'
- name: download dotfiles
  ansible.builtin.git:
    repo: 'https://github.com/heywoodlh/conf'
    dest: '/home/heywoodlh/opt/conf'
  become: yes
  become_user: heywoodlh
- name: check if ~/.config/powershell/linux.ps1 exists (to know if dotfiles should be installed)
  ansible.builtin.stat:
    path: /home/heywoodlh/.config/powershell/linux.ps1
  register: pwsh_conf
- name: install dotfiles
  ansible.builtin.command: "pwsh -c '. /home/heywoodlh/opt/conf/setup.ps1'"
  become: yes
  become_user: "heywoodlh"
  when: not pwsh_conf.stat.exists
- name: install peru with pip
  ansible.builtin.pip:
    name: peru
    extra_args: --user
- name: sync modules with peru
  ansible.builtin.command: python3 -m peru sync
  become_user: heywoodlh
  args:
    chdir: /home/heywoodlh/opt/conf
