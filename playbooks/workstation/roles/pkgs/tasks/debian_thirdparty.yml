---
- name: install argocd 
  block:
  - name: check if argo_cd is installed
    ansible.builtin.stat:
      path: /usr/local/bin/argocd
    register: argo_check
  - name: download argocd
    ansible.builtin.get_url:
      url: https://github.com/argoproj/argo-cd/releases/latest/download/argocd-linux-amd64
      dest: /usr/local/bin/argocd
      mode: +x
    when: not argo_check.stat.exists and ansible_architecture == "x86_64"
  - name: download argocd
    ansible.builtin.get_url:
      url: https://github.com/argoproj/argo-cd/releases/latest/download/argocd-linux-arm64
      dest: /usr/local/bin/argocd
      mode: +x
    when: not argo_check.stat.exists and ansible_architecture == "arm64"

- name: install doctl
  block:
  - name: check if doctl is installed
    ansible.builtin.stat: 
      path: /usr/local/bin/doctl
    register: doctl_check
  - name: download doctl
    ansible.builtin.get_url:
      url: https://github.com/digitalocean/doctl/releases/download/v1.77.0/doctl-1.77.0-linux-amd64.tar.gz
      dest: /tmp/doctl.tar.gz
    when: not doctl_check.stat.exists and ansible_architecture == "x86_64"
  - name: download doctl
    ansible.builtin.get_url:
      url: https://github.com/digitalocean/doctl/releases/download/v1.77.0/doctl-1.77.0-linux-arm64.tar.gz
      dest: /tmp/doctl.tar.gz
    when: not doctl_check.stat.exists and ansible_architecture == "arm64"
  - name: extract doctl
    ansible.builtin.unarchive:
      remote_src: yes
      src: /tmp/doctl.tar.gz
      dest: /usr/local/bin
  - name: remove tar.gz
    ansible.builtin.file:
      path: /tmp/doctl.tar.gz
      state: absent

- name: install gh
  block:
  - name: check if gh is installed
    ansible.builtin.stat:
      path: /usr/bin/gh
    register: gh_check
  - name: download github-cli keyring
    ansible.builtin.get_url:
      url: https://cli.github.com/packages/githubcli-archive-keyring.gpg
      dest: /usr/share/keyrings/githubcli-archive-keyring.gpg
    when: not gh_check.stat.exists
  - name: add github-cli apt source
    ansible.builtin.lineinfile: 
      path: /etc/apt/sources.list.d/github-cli.list
      line: "deb [arch=amd64 signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" 
    when: ansible_architecture == "amd64" and not gh_check.stat.exists
  - name: add github-cli apt source
    ansible.builtin.lineinfile: 
      path: /etc/apt/sources.list.d/github-cli.list
      line: "deb [arch=arm64 signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" 
    when: ansible_architecture == "arm64" and not gh_check.stat.exists
  - name: install github-cli
    ansible.builtin.apt:
      name: gh
      update_cache: yes
    when: not gh_check.stat.exists

- name: install helm
  block:
  - name: check if helm is installed
    ansible.builtin.stat:
      path: /usr/local/bin/helm
    register: helm_check
  - name: download the helm install script
    ansible.builtin.get_url:
      url: https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3
      dest: /tmp/get_helm.sh
      mode: +x
    when: not helm_check.stat.exists
  - name: install helm
    ansible.builtin.script: /tmp/get_helm.sh
    when: not helm_check.stat.exists
  - name: remove get_helm.sh
    ansible.builtin.file:
      path: /tmp/get_helm.sh
      state: absent
    when: not helm_check.stat.exists

- name: install iosevka
  block:
  - name: check if iosevka-font exists
    ansible.builtin.stat:
      path: /usr/local/share/fonts/iosevka-font
    register: iosevka_check
  - name: download iosevka fonts
    ansible.builtin.get_url:
      url: https://github.com/be5invis/Iosevka/releases/download/v15.5.0/ttf-iosevka-15.5.0.zip
      dest: /tmp/iosevka.zip
    when: iosevka_check.stat.exists
  - name: extract iosevka.zip 
    ansible.builtin.unarchive:
      remote_src: yes
      src: /tmp/iosevka.zip
      dest: /usr/local/share/fonts/iosevka-font
    when: iosevka_check.stat.exists
  - name: remove iosevka.zip
    ansible.builtin.file:
      path: /tmp/iosevka.zip
      state: absent
    when: iosevka_check.stat.exists

- name: install k9s 
  block:
  - name: check if k9s is installed
    ansible.builtin.stat:
      path: /usr/local/bin/k9s
    register: k9s_check
  - name: download k9s
    ansible.builtin.get_url:
      url: https://github.com/derailed/k9s/releases/latest/download/k9s_Linux_x86_64.tar.gz 
      dest: /tmp/k9s.tar.gz 
      mode: +x
    when: not argo_check.stat.exists and ansible_architecture == "x86_64"
  - name: download argocd
    ansible.builtin.get_url:
      url: https://github.com/derailed/k9s/releases/latest/download/k9s_Linux_arm64.tar.gz 
      dest: /tmp/k9s.tar.gz
      mode: +x
    when: not argo_check.stat.exists and ansible_architecture == "arm64"
  - name: extract k9s
    ansible.builtin.unarchive:
      remote_src: yes
      src: /tmp/k9s.tar.gz
      dest: /usr/local/bin
  - name: remove tar.gz
    ansible.builtin.file:
      path: /tmp/k9s.tar.gz
      state: absent

- name: install popeye 
  block:
  - name: check if popeye is installed
    ansible.builtin.stat:
      path: /usr/local/bin/popeye
    register: popeye_check
  - name: download popeye
    ansible.builtin.get_url:
      url: https://github.com/derailed/popeye/releases/latest/download/popeye_Linux_x86_64.tar.gz 
      dest: /tmp/popeye.tar.gz 
      mode: +x
    when: not argo_check.stat.exists and ansible_architecture == "x86_64"
  - name: download argocd
    ansible.builtin.get_url:
      url: https://github.com/derailed/popeye/releases/latest/download/popeye_Linux_arm64.tar.gz 
      dest: /tmp/popeye.tar.gz
      mode: +x
    when: not argo_check.stat.exists and ansible_architecture == "arm64"
  - name: extract popeye
    ansible.builtin.unarchive:
      remote_src: yes
      src: /tmp/popeye.tar.gz
      dest: /usr/local/bin
  - name: remove tar.gz
    ansible.builtin.file:
      path: /tmp/popeye.tar.gz
      state: absent

- name: install rofi-pass
  block:
  - name: check if rofi-pass is installed
    ansible.builtin.stat: 
      path: /usr/local/bin/rofi-pass
    register: rofi_pass_check
  - name: git clone https://github.com/carnager/rofi-pass
    ansible.builtin.git:
      repo: https://github.com/carnager/rofi-pass
      dest: /tmp/rofi-pass
    when: not rofi_pass_check.stat.exists
  - name: install rofi-pass
    community.general.make:
      chdir: /tmp/rofi-pass
      file: /tmp/rofi-pass/Makefile
    when: not rofi_pass_check.stat.exists
  - name: remove rofi-pass directory
    ansible.builtin.file:
      path: /tmp/rofi-pass
      state: absent
    when: not rofi_pass_check.stat.exists


